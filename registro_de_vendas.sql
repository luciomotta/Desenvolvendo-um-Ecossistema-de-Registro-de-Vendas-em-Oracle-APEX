CREATE TABLE SALDOS (
    PRODUTOS VARCHAR(10),
    SALDO_INICIAL NUMERIC(10),
    SALDO_FINAL NUMERIC(10),
    DATA_UTIL_MOV TIMESTAMP

);
/*iNSERIR VALOR NA TABELA ----> SALDO*/
INSERT INTO SALDOS (PRODUTOS, SALDO_INICIAL, SALDO_FINAL, DATA_UTIL_MOV)
    VALUES('Produto A', 0, 100, sysdate);

select * from saldos
/*CRIANDO TABELA VENDA*/
CREATE TABLE VENDAS (
    ID_VENDAS INT,
    PRODUTOS VARCHAR(10),
    QUANTIDADE INT,
    DATA TIMESTAMP
);
/*Criando sequencia p\ fazer  a inserção de valor no ID  da tabela*/
CREATE SEQUENCE SEQ_VENDAS
    START WITH 1
    INCREMENT BY 1;
/*CRIANDO TABELA HISTÓRICO DE VENDAS*/
CREATE TABLE HIST_VENDAS(
    PRODUTOS VARCHAR(10),
    QUANTIDADE INT,
    DATA_VENDA TIMESTAMP
);
/*Trigger p/ fazer update nas tabelas e montar  um eco sistema atualizando valores do saldo dos produtos e historico de vendas*/
CREATE OR REPLACE TRIGGER TRG_AJUSTA_SALDO
AFTER INSERT ON VENDAS
FOR EACH ROW
BEGIN
        -- Atualiza o saldo final na tabela SALDOS
        UPDATE SALDOS
        SET SALDO_FINAL = SALDO_FINAL - :NEW.QUANTIDADE,
            DATA_UTIL_MOV = :NEW.DATA
        WHERE PRODUTOS = :NEW.PRODUTOS;

        -- Insere o histórico de vendas na tabela HIST_VENDAS
        INSERT INTO HIST_VENDAS (PRODUTOS, QUANTIDADE, DATA_VENDA)
        VALUES (:NEW.PRODUTOS, :NEW.QUANTIDADE, :NEW.DATA);
END;
/*Criar GATILHO p\ inserir o ID na tabela Vendas sempre que Houver uma inserção chamando a seguencia */
CREATE OR REPLACE TRIGGER TRG_ID_VENDAS
BEFORE INSERT ON VENDAS
FOR EACH ROW 
BEGIN
    :NEW.ID_VENDAS := SEQ_VENDAS.NEXTVAL;

END;

/*cRIANDO UM REGISTRO E VISUALIZANDO A TABELA*/

INSERT INTO VENDAS (PRODUTOS, QUANTIDADE, DATA)
    values('Produto A', 2, SYSDATE);

    SELECT * FROM VENDAS
/*quNADO O INSERT (VENDAS)FOI DETECTADO ELE FOI NA TABELA SALDOS E HIST_VENDAS PELO GATILHO*/
SELECT * FROM saldos
SELECT * FROM HIST_VENDAS